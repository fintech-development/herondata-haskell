{-
   Heron Data API

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.0
   Heron Data API API version: 2021-07-19
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : HeronData.API.Transactions
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module HeronData.API.Transactions where

import HeronData.Core
import HeronData.MimeTypes
import HeronData.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Transactions

-- *** apiTransactionsDelete

-- | @DELETE \/api\/transactions@
-- 
-- Delete transactions
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
apiTransactionsDelete
  :: HeronDataRequest ApiTransactionsDelete MimeNoContent InlineResponse202 MimeJSON
apiTransactionsDelete =
  _mkRequest "DELETE" ["/api/transactions"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data ApiTransactionsDelete  

-- | /Optional Param/ "only_duplicates" - if true, deletes only duplicates
instance HasOptionalParam ApiTransactionsDelete OnlyDuplicates where
  applyOptionalParam req (OnlyDuplicates xs) =
    req `addQuery` toQuery ("only_duplicates", Just xs)
instance HasOptionalParam ApiTransactionsDelete AccountId where
  applyOptionalParam req (AccountId xs) =
    req `addQuery` toQuery ("account_id", Just xs)
instance HasOptionalParam ApiTransactionsDelete RequestId where
  applyOptionalParam req (RequestId xs) =
    req `addQuery` toQuery ("request_id", Just xs)
instance HasOptionalParam ApiTransactionsDelete HeronId where
  applyOptionalParam req (HeronId xs) =
    req `addQuery` toQuery ("heron_id", Just xs)
instance HasOptionalParam ApiTransactionsDelete EndUserId where
  applyOptionalParam req (EndUserId xs) =
    req `addQuery` toQuery ("end_user_id", Just xs)
-- | @application/json@
instance Produces ApiTransactionsDelete MimeJSON


-- *** apiTransactionsGet

-- | @GET \/api\/transactions@
-- 
-- Get transactions
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
apiTransactionsGet
  :: HeronDataRequest ApiTransactionsGet MimeNoContent InlineResponse2008 MimeJSON
apiTransactionsGet =
  _mkRequest "GET" ["/api/transactions"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)

data ApiTransactionsGet  

-- | /Optional Param/ "page" - Page of transaction to return
instance HasOptionalParam ApiTransactionsGet Page where
  applyOptionalParam req (Page xs) =
    req `addQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "to_date" - Deprecated; see created_date_ or timestamp_date_
instance HasOptionalParam ApiTransactionsGet ToDate where
  applyOptionalParam req (ToDate xs) =
    req `addQuery` toQuery ("to_date", Just xs)

-- | /Optional Param/ "min_amount" - Filter by minimum amount of transaction
instance HasOptionalParam ApiTransactionsGet MinAmount where
  applyOptionalParam req (MinAmount xs) =
    req `addQuery` toQuery ("min_amount", Just xs)

-- | /Optional Param/ "last_updated_max" - Filter for transactions whose values were last updated in Heron systems before the specified input value
instance HasOptionalParam ApiTransactionsGet LastUpdatedMax where
  applyOptionalParam req (LastUpdatedMax xs) =
    req `addQuery` toQuery ("last_updated_max", Just xs)

-- | /Optional Param/ "end_user_id" - End user id of transaction
instance HasOptionalParam ApiTransactionsGet EndUserId where
  applyOptionalParam req (EndUserId xs) =
    req `addQuery` toQuery ("end_user_id", Just xs)

-- | /Optional Param/ "heron_id" - Heron generated Id of transaction
instance HasOptionalParam ApiTransactionsGet HeronId where
  applyOptionalParam req (HeronId xs) =
    req `addQuery` toQuery ("heron_id", Just xs)

-- | /Optional Param/ "is_recurring" - Filter by whether the transaction is recurring
instance HasOptionalParam ApiTransactionsGet IsRecurring where
  applyOptionalParam req (IsRecurring xs) =
    req `addQuery` toQuery ("is_recurring", Just xs)

-- | /Optional Param/ "limit" - Number of transactions to return per page
instance HasOptionalParam ApiTransactionsGet Limit where
  applyOptionalParam req (Limit xs) =
    req `addQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "max_amount" - Filter by maximum amount of transaction
instance HasOptionalParam ApiTransactionsGet MaxAmount where
  applyOptionalParam req (MaxAmount xs) =
    req `addQuery` toQuery ("max_amount", Just xs)

-- | /Optional Param/ "confidence_min" - Filter by minimum confidence of annotation associated with transaction
instance HasOptionalParam ApiTransactionsGet ConfidenceMin where
  applyOptionalParam req (ConfidenceMin xs) =
    req `addQuery` toQuery ("confidence_min", Just xs)

-- | /Optional Param/ "created_date_max" - Filter by latest transaction upload date - when Heron received the transaction
instance HasOptionalParam ApiTransactionsGet CreatedDateMax where
  applyOptionalParam req (CreatedDateMax xs) =
    req `addQuery` toQuery ("created_date_max", Just xs)

-- | /Optional Param/ "order_by" - What to order transactions by
instance HasOptionalParam ApiTransactionsGet OrderBy2 where
  applyOptionalParam req (OrderBy2 xs) =
    req `addQuery` toQuery ("order_by", Just xs)

-- | /Optional Param/ "include_duplicates" - Whether or not to include duplicate transactions in the response. Defaults to false unless request_id is provided, in which case it defaults to true.
instance HasOptionalParam ApiTransactionsGet IncludeDuplicates where
  applyOptionalParam req (IncludeDuplicates xs) =
    req `addQuery` toQuery ("include_duplicates", Just xs)

-- | /Optional Param/ "reference_id" - Reference Id of transaction
instance HasOptionalParam ApiTransactionsGet ReferenceId where
  applyOptionalParam req (ReferenceId xs) =
    req `addQuery` toQuery ("reference_id", Just xs)

-- | /Optional Param/ "from_date" - Deprecated; see created_date_ or timestamp_date_
instance HasOptionalParam ApiTransactionsGet FromDate where
  applyOptionalParam req (FromDate xs) =
    req `addQuery` toQuery ("from_date", Just xs)

-- | /Optional Param/ "description_keyword" - Filter by keyword match on transaction description; case insensitive
instance HasOptionalParam ApiTransactionsGet DescriptionKeyword where
  applyOptionalParam req (DescriptionKeyword xs) =
    req `addQuery` toQuery ("description_keyword", Just xs)

-- | /Optional Param/ "timestamp_date_min" - Filter by earliest transaction timestamp
instance HasOptionalParam ApiTransactionsGet TimestampDateMin where
  applyOptionalParam req (TimestampDateMin xs) =
    req `addQuery` toQuery ("timestamp_date_min", Just xs)

-- | /Optional Param/ "timestamp_date_max" - Filter by latest transaction timestamp
instance HasOptionalParam ApiTransactionsGet TimestampDateMax where
  applyOptionalParam req (TimestampDateMax xs) =
    req `addQuery` toQuery ("timestamp_date_max", Just xs)

-- | /Optional Param/ "description_regex" - Filter by regex matching transaction description
instance HasOptionalParam ApiTransactionsGet DescriptionRegex where
  applyOptionalParam req (DescriptionRegex xs) =
    req `addQuery` toQuery ("description_regex", Just xs)

-- | /Optional Param/ "confidence_max" - Filter by maximum confidence of annotation associated with transaction
instance HasOptionalParam ApiTransactionsGet ConfidenceMax where
  applyOptionalParam req (ConfidenceMax xs) =
    req `addQuery` toQuery ("confidence_max", Just xs)

-- | /Optional Param/ "has_matching_transaction" - Filter by whether the transaction has a matching transaction
instance HasOptionalParam ApiTransactionsGet HasMatchingTransaction where
  applyOptionalParam req (HasMatchingTransaction xs) =
    req `addQuery` toQuery ("has_matching_transaction", Just xs)

-- | /Optional Param/ "last_updated_min" - Filter for transactions whose values were last updated in Heron systems after the specified input value
instance HasOptionalParam ApiTransactionsGet LastUpdatedMin where
  applyOptionalParam req (LastUpdatedMin xs) =
    req `addQuery` toQuery ("last_updated_min", Just xs)

-- | /Optional Param/ "transaction_code" - Filter by transaction code
instance HasOptionalParam ApiTransactionsGet TransactionCode where
  applyOptionalParam req (TransactionCode xs) =
    req `addQuery` toQuery ("transaction_code", Just xs)

-- | /Optional Param/ "category_heron_id" - Filter by the heron_id of the category that the transaction is annotated with
instance HasOptionalParam ApiTransactionsGet CategoryHeronIdText where
  applyOptionalParam req (CategoryHeronIdText xs) =
    req `addQuery` toQueryColl MultiParamArray ("category_heron_id", Just xs)

-- | /Optional Param/ "request_id" - Request-Id header returned in the response of POST transactions. Sending this parameter will return all transactions sent in a particular POST request, including any duplicates.
instance HasOptionalParam ApiTransactionsGet RequestId where
  applyOptionalParam req (RequestId xs) =
    req `addQuery` toQuery ("request_id", Just xs)

-- | /Optional Param/ "created_date_min" - Filter by earliest transaction upload date - when Heron received the transaction
instance HasOptionalParam ApiTransactionsGet CreatedDateMin where
  applyOptionalParam req (CreatedDateMin xs) =
    req `addQuery` toQuery ("created_date_min", Just xs)
-- | @application/json@
instance Produces ApiTransactionsGet MimeJSON


-- *** apiTransactionsHeronIdFeedbackPut

-- | @PUT \/api\/transactions\/{heron_id}\/feedback@
-- 
-- Transaction Feedback
-- 
-- Provide feedback on a Transaction's Categories and Merchants
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
apiTransactionsHeronIdFeedbackPut
  :: (Consumes ApiTransactionsHeronIdFeedbackPut MimeJSON, MimeRender MimeJSON InlineObject4)
  => InlineObject4 -- ^ "inlineObject4"
  -> HeronDataRequest ApiTransactionsHeronIdFeedbackPut MimeJSON NoContent MimeNoContent
apiTransactionsHeronIdFeedbackPut inlineObject4 =
  _mkRequest "PUT" ["/api/transactions/{heron_id}/feedback"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)
    `setBodyParam` inlineObject4

data ApiTransactionsHeronIdFeedbackPut 
instance HasBodyParam ApiTransactionsHeronIdFeedbackPut InlineObject4 

-- | @application/json@
instance Consumes ApiTransactionsHeronIdFeedbackPut MimeJSON

instance Produces ApiTransactionsHeronIdFeedbackPut MimeNoContent


-- *** apiTransactionsPost

-- | @POST \/api\/transactions@
-- 
-- Enrich and categorize transactions
-- 
-- Enrich and categorize transactions. Please send a **maximum of 1,000 transactions** per request to avoid timeouts. 
-- 
-- AuthMethod: 'AuthBasicBasicAuth'
-- 
apiTransactionsPost
  :: (Consumes ApiTransactionsPost MimeJSON, MimeRender MimeJSON InlineObject3)
  => InlineObject3 -- ^ "inlineObject3"
  -> HeronDataRequest ApiTransactionsPost MimeJSON InlineResponse201 MimeJSON
apiTransactionsPost inlineObject3 =
  _mkRequest "POST" ["/api/transactions"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthBasicBasicAuth)
    `setBodyParam` inlineObject3

data ApiTransactionsPost 
instance HasBodyParam ApiTransactionsPost InlineObject3 

-- | @application/json@
instance Consumes ApiTransactionsPost MimeJSON

-- | @application/json@
instance Produces ApiTransactionsPost MimeJSON

